{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rybak/Desktop/Apps2/ProcessAutomationWithAI/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getFunctions } from \"firebase/functions\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY!,\r\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN!,\r\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID!,\r\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET!,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID!,\r\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID!,\r\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\nexport const functions = getFunctions(app);\r\n"],"names":[],"mappings":";;;;;;;;AAMU;AANV;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,MAAM,MAAM,IAAA,oLAAa,EAAC;AAEnB,MAAM,OAAO,IAAA,oMAAO,EAAC;AACrB,MAAM,KAAK,IAAA,kLAAY,EAAC;AACxB,MAAM,YAAY,IAAA,yLAAY,EAAC","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rybak/Desktop/Apps2/ProcessAutomationWithAI/src/lib/activityTracker.ts"],"sourcesContent":["import { db } from \"./firebase\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  query,\r\n  orderBy,\r\n  limit,\r\n  getDocs,\r\n  where,\r\n} from \"firebase/firestore\";\r\n\r\nexport interface UserActivity {\r\n  id?: string;\r\n  userId: string;\r\n  userEmail: string;\r\n  type:\r\n    | \"question_asked\"\r\n    | \"canvas_created\"\r\n    | \"canvas_saved\"\r\n    | \"case_study_viewed\"\r\n    | \"simulation_run\"\r\n    | \"login\";\r\n  title: string;\r\n  description: string;\r\n  timestamp: Date;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\nexport class ActivityTracker {\r\n  static async trackActivity(\r\n    activity: Omit<UserActivity, \"id\" | \"timestamp\">\r\n  ): Promise<void> {\r\n    try {\r\n      const activityWithTimestamp = {\r\n        ...activity,\r\n        timestamp: new Date(),\r\n      };\r\n\r\n      await addDoc(collection(db, \"user_activities\"), activityWithTimestamp);\r\n    } catch (error) {\r\n      console.error(\"Error tracking activity:\", error);\r\n      // Fallback to localStorage for guests or offline users\r\n      this.trackActivityLocal(activity);\r\n    }\r\n  }\r\n\r\n  static trackActivityLocal(\r\n    activity: Omit<UserActivity, \"id\" | \"timestamp\">\r\n  ): void {\r\n    try {\r\n      const activities = this.getLocalActivities();\r\n      const activityWithTimestamp = {\r\n        ...activity,\r\n        timestamp: new Date(),\r\n        id: Date.now().toString(),\r\n      };\r\n\r\n      activities.unshift(activityWithTimestamp);\r\n\r\n      // Keep only last 50 activities locally\r\n      if (activities.length > 50) {\r\n        activities.splice(50);\r\n      }\r\n\r\n      localStorage.setItem(\"local_activities\", JSON.stringify(activities));\r\n    } catch (error) {\r\n      console.error(\"Error tracking local activity:\", error);\r\n    }\r\n  }\r\n\r\n  static async getRecentActivities(\r\n    userId: string,\r\n    limitCount: number = 10\r\n  ): Promise<UserActivity[]> {\r\n    try {\r\n      const q = query(\r\n        collection(db, \"user_activities\"),\r\n        where(\"userId\", \"==\", userId),\r\n        orderBy(\"timestamp\", \"desc\"),\r\n        limit(limitCount)\r\n      );\r\n\r\n      const querySnapshot = await getDocs(q);\r\n      const activities: UserActivity[] = [];\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        activities.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n          timestamp: doc.data().timestamp.toDate(),\r\n        } as UserActivity);\r\n      });\r\n\r\n      return activities;\r\n    } catch (error) {\r\n      console.error(\"Error fetching activities:\", error);\r\n      // Fallback to local activities\r\n      return this.getLocalActivities().slice(0, limitCount);\r\n    }\r\n  }\r\n\r\n  static getLocalActivities(): UserActivity[] {\r\n    try {\r\n      const stored = localStorage.getItem(\"local_activities\");\r\n      if (!stored) return [];\r\n\r\n      const activities = JSON.parse(stored);\r\n      return activities.map((activity: any) => ({\r\n        ...activity,\r\n        timestamp: new Date(activity.timestamp),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error reading local activities:\", error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  static async getActivityMetrics(userId: string): Promise<{\r\n    questionsAsked: number;\r\n    canvasesCreated: number;\r\n    simulationsRun: number;\r\n    caseStudiesViewed: number;\r\n    totalActivities: number;\r\n  }> {\r\n    try {\r\n      const activities = await this.getRecentActivities(userId, 100);\r\n\r\n      return {\r\n        questionsAsked: activities.filter((a) => a.type === \"question_asked\")\r\n          .length,\r\n        canvasesCreated: activities.filter((a) => a.type === \"canvas_created\")\r\n          .length,\r\n        simulationsRun: activities.filter((a) => a.type === \"simulation_run\")\r\n          .length,\r\n        caseStudiesViewed: activities.filter(\r\n          (a) => a.type === \"case_study_viewed\"\r\n        ).length,\r\n        totalActivities: activities.length,\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error fetching metrics:\", error);\r\n      return {\r\n        questionsAsked: 0,\r\n        canvasesCreated: 0,\r\n        simulationsRun: 0,\r\n        caseStudiesViewed: 0,\r\n        totalActivities: 0,\r\n      };\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;AA2BO,MAAM;IACX,aAAa,cACX,QAAgD,EACjC;QACf,IAAI;YACF,MAAM,wBAAwB;gBAC5B,GAAG,QAAQ;gBACX,WAAW,IAAI;YACjB;YAEA,MAAM,IAAA,4KAAM,EAAC,IAAA,gLAAU,EAAC,+HAAE,EAAE,oBAAoB;QAClD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,uDAAuD;YACvD,IAAI,CAAC,kBAAkB,CAAC;QAC1B;IACF;IAEA,OAAO,mBACL,QAAgD,EAC1C;QACN,IAAI;YACF,MAAM,aAAa,IAAI,CAAC,kBAAkB;YAC1C,MAAM,wBAAwB;gBAC5B,GAAG,QAAQ;gBACX,WAAW,IAAI;gBACf,IAAI,KAAK,GAAG,GAAG,QAAQ;YACzB;YAEA,WAAW,OAAO,CAAC;YAEnB,uCAAuC;YACvC,IAAI,WAAW,MAAM,GAAG,IAAI;gBAC1B,WAAW,MAAM,CAAC;YACpB;YAEA,aAAa,OAAO,CAAC,oBAAoB,KAAK,SAAS,CAAC;QAC1D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;QAClD;IACF;IAEA,aAAa,oBACX,MAAc,EAEW;YADzB,aAAA,iEAAqB;QAErB,IAAI;YACF,MAAM,IAAI,IAAA,2KAAK,EACb,IAAA,gLAAU,EAAC,+HAAE,EAAE,oBACf,IAAA,2KAAK,EAAC,UAAU,MAAM,SACtB,IAAA,6KAAO,EAAC,aAAa,SACrB,IAAA,2KAAK,EAAC;YAGR,MAAM,gBAAgB,MAAM,IAAA,6KAAO,EAAC;YACpC,MAAM,aAA6B,EAAE;YAErC,cAAc,OAAO,CAAC,CAAC;gBACrB,WAAW,IAAI,CAAC;oBACd,IAAI,IAAI,EAAE;oBACV,GAAG,IAAI,IAAI,EAAE;oBACb,WAAW,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM;gBACxC;YACF;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,+BAA+B;YAC/B,OAAO,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,GAAG;QAC5C;IACF;IAEA,OAAO,qBAAqC;QAC1C,IAAI;YACF,MAAM,SAAS,aAAa,OAAO,CAAC;YACpC,IAAI,CAAC,QAAQ,OAAO,EAAE;YAEtB,MAAM,aAAa,KAAK,KAAK,CAAC;YAC9B,OAAO,WAAW,GAAG,CAAC,CAAC,WAAkB,CAAC;oBACxC,GAAG,QAAQ;oBACX,WAAW,IAAI,KAAK,SAAS,SAAS;gBACxC,CAAC;QACH,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mCAAmC;YACjD,OAAO,EAAE;QACX;IACF;IAEA,aAAa,mBAAmB,MAAc,EAM3C;QACD,IAAI;YACF,MAAM,aAAa,MAAM,IAAI,CAAC,mBAAmB,CAAC,QAAQ;YAE1D,OAAO;gBACL,gBAAgB,WAAW,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,kBACjD,MAAM;gBACT,iBAAiB,WAAW,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,kBAClD,MAAM;gBACT,gBAAgB,WAAW,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,kBACjD,MAAM;gBACT,mBAAmB,WAAW,MAAM,CAClC,CAAC,IAAM,EAAE,IAAI,KAAK,qBAClB,MAAM;gBACR,iBAAiB,WAAW,MAAM;YACpC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;YACzC,OAAO;gBACL,gBAAgB;gBAChB,iBAAiB;gBACjB,gBAAgB;gBAChB,mBAAmB;gBACnB,iBAAiB;YACnB;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rybak/Desktop/Apps2/ProcessAutomationWithAI/src/app/canvas/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { auth } from \"@/lib/firebase\";\r\nimport { User, onAuthStateChanged } from \"firebase/auth\";\r\nimport { ActivityTracker } from \"@/lib/activityTracker\";\r\nimport Link from \"next/link\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    mxGraph: any;\r\n    mxGraphModel: any;\r\n    mxGeometry: any;\r\n    mxCell: any;\r\n    mxCodec: any;\r\n    mxUtils: any;\r\n    mxEvent: any;\r\n    mxCellOverlay: any;\r\n    mxImage: any;\r\n    mxImageExport: any;\r\n  }\r\n}\r\n\r\nexport default function CanvasPage() {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [guestMode, setGuestMode] = useState(false);\r\n  const canvasRef = useRef<HTMLDivElement>(null);\r\n  const graphRef = useRef<any>(null);\r\n  const [savedCanvases, setSavedCanvases] = useState<\r\n    Array<{ id: string; name: string; data: any }>\r\n  >([]);\r\n  const [currentCanvasName, setCurrentCanvasName] = useState(\"Untitled Canvas\");\r\n  const [isCreatingCanvas, setIsCreatingCanvas] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n      } else {\r\n        const isGuest = localStorage.getItem(\"guestMode\") === \"true\";\r\n        if (isGuest) {\r\n          setGuestMode(true);\r\n          setUser({ email: \"guest@example.com\" } as User);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user && canvasRef.current) {\r\n      initializeCanvas();\r\n    }\r\n  }, [user, canvasRef.current]);\r\n\r\n  const initializeCanvas = () => {\r\n    if (typeof window !== \"undefined\" && window.mxGraph) {\r\n      const container = canvasRef.current;\r\n      if (!container) return;\r\n\r\n      // Initialize mxGraph\r\n      const graph = new window.mxGraph(container);\r\n      graphRef.current = graph;\r\n\r\n      // Configure graph\r\n      graph.setConnectable(true);\r\n      graph.setCellsEditable(true);\r\n      graph.setCellsMovable(true);\r\n      graph.setCellsResizable(true);\r\n\r\n      // Load canvas data from localStorage if exists\r\n      const canvasData = localStorage.getItem(\"canvasData\");\r\n      if (canvasData) {\r\n        try {\r\n          const data = JSON.parse(canvasData);\r\n          loadCanvasData(data);\r\n          localStorage.removeItem(\"canvasData\"); // Clear temp data\r\n        } catch (error) {\r\n          console.error(\"Error loading canvas data:\", error);\r\n        }\r\n      }\r\n\r\n      // Load saved canvases for logged-in users\r\n      if (!guestMode && user && user.email) {\r\n        loadSavedCanvases();\r\n      }\r\n    }\r\n  };\r\n\r\n  const loadCanvasData = (data: any) => {\r\n    if (!graphRef.current || !data.nodes) return;\r\n\r\n    const graph = graphRef.current;\r\n    const model = graph.getModel();\r\n    model.beginUpdate();\r\n\r\n    try {\r\n      const nodeMap = new Map();\r\n\r\n      // Create nodes\r\n      data.nodes.forEach((node: any) => {\r\n        const vertex = graph.insertVertex(\r\n          graph.getDefaultParent(),\r\n          node.id,\r\n          node.label,\r\n          node.position.x,\r\n          node.position.y,\r\n          120,\r\n          60,\r\n          node.type === \"start\"\r\n            ? \"shape=ellipse;fillColor=#4CAF50;fontColor=white;\"\r\n            : node.type === \"end\"\r\n            ? \"shape=ellipse;fillColor=#f44336;fontColor=white;\"\r\n            : \"\"\r\n        );\r\n        nodeMap.set(node.id, vertex);\r\n      });\r\n\r\n      // Create edges\r\n      if (data.edges) {\r\n        data.edges.forEach((edge: any) => {\r\n          const source = nodeMap.get(edge.source);\r\n          const target = nodeMap.get(edge.target);\r\n          if (source && target) {\r\n            graph.insertEdge(\r\n              graph.getDefaultParent(),\r\n              edge.id,\r\n              \"\",\r\n              source,\r\n              target\r\n            );\r\n          }\r\n        });\r\n      }\r\n    } finally {\r\n      model.endUpdate();\r\n    }\r\n  };\r\n\r\n  const loadSavedCanvases = () => {\r\n    if (guestMode) return;\r\n    const saved = localStorage.getItem(`canvases_${user?.email}`);\r\n    if (saved) {\r\n      try {\r\n        setSavedCanvases(JSON.parse(saved));\r\n      } catch (error) {\r\n        console.error(\"Error loading saved canvases:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveCurrentCanvas = () => {\r\n    if (guestMode || !graphRef.current) {\r\n      alert(\"Please log in to save canvases.\");\r\n      return;\r\n    }\r\n\r\n    const graph = graphRef.current;\r\n    const encoder = new window.mxCodec();\r\n    const node = encoder.encode(graph.getModel());\r\n\r\n    const canvasData = {\r\n      id: Date.now().toString(),\r\n      name: currentCanvasName,\r\n      data: window.mxUtils.getXml(node),\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n\r\n    const updatedCanvases = [...savedCanvases, canvasData];\r\n    setSavedCanvases(updatedCanvases);\r\n    localStorage.setItem(\r\n      `canvases_${user?.email}`,\r\n      JSON.stringify(updatedCanvases)\r\n    );\r\n    alert(\"Canvas saved successfully!\");\r\n\r\n    // Track canvas save activity\r\n    if (user) {\r\n      ActivityTracker.trackActivity({\r\n        userId: user.uid,\r\n        userEmail: user.email!,\r\n        type: \"canvas_saved\",\r\n        title: `Saved canvas: ${currentCanvasName}`,\r\n        description: \"User saved their process flow diagram\",\r\n        metadata: { canvasName: currentCanvasName },\r\n      });\r\n    }\r\n  };\r\n\r\n  const loadCanvas = (canvasData: any) => {\r\n    if (!graphRef.current) return;\r\n\r\n    const graph = graphRef.current;\r\n    graph.getModel().clear();\r\n\r\n    // Decode XML and load into graph\r\n    const doc = window.mxUtils.parseXml(canvasData.data);\r\n    const codec = new window.mxCodec(doc);\r\n    const model = graph.getModel();\r\n    codec.decode(doc.documentElement, model);\r\n  };\r\n\r\n  const createNewCanvas = () => {\r\n    if (!graphRef.current) return;\r\n\r\n    const graph = graphRef.current;\r\n    graph.getModel().clear();\r\n    setCurrentCanvasName(\"Untitled Canvas\");\r\n    setIsCreatingCanvas(true);\r\n\r\n    // Track canvas creation activity\r\n    if (user && !guestMode) {\r\n      ActivityTracker.trackActivity({\r\n        userId: user.uid,\r\n        userEmail: user.email!,\r\n        type: \"canvas_created\",\r\n        title: \"Created new canvas\",\r\n        description: \"User started working on a new process flow diagram\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const addNode = (type: string) => {\r\n    if (!graphRef.current) return;\r\n\r\n    const graph = graphRef.current;\r\n    const parent = graph.getDefaultParent();\r\n\r\n    let label, style;\r\n    switch (type) {\r\n      case \"start\":\r\n        label = \"Start\";\r\n        style = \"shape=ellipse;fillColor=#4CAF50;fontColor=white;\";\r\n        break;\r\n      case \"process\":\r\n        label = \"Process\";\r\n        style = \"\";\r\n        break;\r\n      case \"decision\":\r\n        label = \"Decision\";\r\n        style = \"shape=rhombus;\";\r\n        break;\r\n      case \"end\":\r\n        label = \"End\";\r\n        style = \"shape=ellipse;fillColor=#f44336;fontColor=white;\";\r\n        break;\r\n      default:\r\n        label = \"Task\";\r\n        style = \"\";\r\n    }\r\n\r\n    const vertex = graph.insertVertex(\r\n      parent,\r\n      null,\r\n      label,\r\n      100,\r\n      100,\r\n      120,\r\n      60,\r\n      style\r\n    );\r\n    graph.setSelectionCell(vertex);\r\n  };\r\n\r\n  const exportCanvas = async () => {\r\n    if (!canvasRef.current) return;\r\n\r\n    try {\r\n      const html2canvas = (await import(\"html2canvas\")).default;\r\n      const canvas = await html2canvas(canvasRef.current);\r\n      const link = document.createElement(\"a\");\r\n      link.download = `${currentCanvasName}.png`;\r\n      link.href = canvas.toDataURL();\r\n      link.click();\r\n    } catch (error) {\r\n      console.error(\"Error exporting canvas:\", error);\r\n      alert(\"Error exporting canvas. Please try again.\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n        <div className=\"text-center\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Access Required\r\n          </h2>\r\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n            Please log in to access the canvas\r\n          </p>\r\n          <div className=\"mt-6 space-y-4\">\r\n            <Link\r\n              href=\"/auth\"\r\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n            >\r\n              Log In\r\n            </Link>\r\n            <button\r\n              onClick={() => (window.location.href = \"/auth?guest=true\")}\r\n              className=\"w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n            >\r\n              Continue as Guest\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-6\">\r\n            <div className=\"flex items-center\">\r\n              <Link\r\n                href=\"/dashboard\"\r\n                className=\"text-indigo-600 hover:text-indigo-500\"\r\n              >\r\n                ← Back to Dashboard\r\n              </Link>\r\n              <h2 className=\"ml-4 text-2xl font-bold text-gray-900\">\r\n                Interactive Canvas - {currentCanvasName}\r\n              </h2>\r\n            </div>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <span className=\"text-sm text-gray-700\">\r\n                {guestMode ? \"Guest Mode\" : `Welcome, ${user.email}`}\r\n              </span>\r\n              {!guestMode && (\r\n                <Link\r\n                  href=\"/auth\"\r\n                  className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n                >\r\n                  Sign out\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        {/* Toolbar */}\r\n        <div className=\"mb-4 bg-white shadow rounded-lg p-4\">\r\n          <div className=\"flex flex-wrap items-center gap-4\">\r\n            <input\r\n              type=\"text\"\r\n              value={currentCanvasName}\r\n              onChange={(e) => setCurrentCanvasName(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n              placeholder=\"Canvas Name\"\r\n            />\r\n\r\n            <button\r\n              onClick={createNewCanvas}\r\n              className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n            >\r\n              New Canvas\r\n            </button>\r\n\r\n            {!guestMode && (\r\n              <button\r\n                onClick={saveCurrentCanvas}\r\n                className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\"\r\n              >\r\n                Save Canvas\r\n              </button>\r\n            )}\r\n\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span className=\"text-sm font-medium text-gray-700\">\r\n                Add Node:\r\n              </span>\r\n              <button\r\n                onClick={() => addNode(\"start\")}\r\n                className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700\"\r\n              >\r\n                Start\r\n              </button>\r\n              <button\r\n                onClick={() => addNode(\"process\")}\r\n                className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n              >\r\n                Process\r\n              </button>\r\n              <button\r\n                onClick={() => addNode(\"decision\")}\r\n                className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n              >\r\n                Decision\r\n              </button>\r\n              <button\r\n                onClick={() => addNode(\"end\")}\r\n                className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700\"\r\n              >\r\n                End\r\n              </button>\r\n            </div>\r\n\r\n            <button\r\n              onClick={exportCanvas}\r\n              className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n            >\r\n              Export PNG\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n          {/* Canvas Area */}\r\n          <div className=\"lg:col-span-3\">\r\n            <div className=\"bg-white shadow rounded-lg\">\r\n              <div className=\"p-4 border-b border-gray-200\">\r\n                <h3 className=\"text-lg font-medium text-gray-900\">\r\n                  Canvas Workspace\r\n                </h3>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  Click and drag to create connections between nodes\r\n                </p>\r\n              </div>\r\n              <div\r\n                ref={canvasRef}\r\n                className=\"w-full h-96 lg:h-[600px] border-0\"\r\n                style={{ cursor: \"crosshair\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sidebar */}\r\n          <div className=\"lg:col-span-1\">\r\n            <div className=\"bg-white shadow rounded-lg p-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n                Saved Canvases\r\n              </h3>\r\n              {!guestMode ? (\r\n                savedCanvases.length > 0 ? (\r\n                  <div className=\"space-y-2\">\r\n                    {savedCanvases.map((canvas) => (\r\n                      <button\r\n                        key={canvas.id}\r\n                        onClick={() => loadCanvas(canvas)}\r\n                        className=\"w-full text-left px-3 py-2 border border-gray-300 rounded-md shadow-sm text-sm hover:bg-gray-50\"\r\n                      >\r\n                        {canvas.name}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    No saved canvases yet. Create and save your first canvas!\r\n                  </p>\r\n                )\r\n              ) : (\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Log in to save and load canvases.\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}