{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rybak/Desktop/Apps2/ProcessAutomationWithAI/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getFunctions } from \"firebase/functions\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY!,\r\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN!,\r\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID!,\r\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET!,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID!,\r\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID!,\r\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\nexport const functions = getFunctions(app);\r\n"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,MAAM,MAAM,IAAA,iLAAa,EAAC;AAEnB,MAAM,OAAO,IAAA,yMAAO,EAAC;AACrB,MAAM,KAAK,IAAA,iLAAY,EAAC;AACxB,MAAM,YAAY,IAAA,sLAAY,EAAC","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rybak/Desktop/Apps2/ProcessAutomationWithAI/src/lib/openRouter.ts"],"sourcesContent":["const OPEN_ROUTER_API_KEY = process.env.OPEN_ROUTER_API_KEY;\r\n\r\nexport const queryOpenRouter = async (prompt: string) => {\r\n  if (!OPEN_ROUTER_API_KEY) {\r\n    throw new Error(\"Open Router API key not configured\");\r\n  }\r\n\r\n  const response = await fetch(\r\n    \"https://openrouter.ai/api/v1/chat/completions\",\r\n    {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${OPEN_ROUTER_API_KEY}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        model: \"anthropic/claude-3-haiku:beta\", // You can change this model\r\n        messages: [\r\n          {\r\n            role: \"user\",\r\n            content: prompt,\r\n          },\r\n        ],\r\n      }),\r\n    }\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Open Router API error: ${response.statusText}`);\r\n  }\r\n\r\n  const data = await response.json();\r\n  return data.choices[0].message.content;\r\n};\r\n\r\nexport const getAIResponse = async (prompt: string) => {\r\n  return await queryOpenRouter(prompt);\r\n};\r\n\r\nexport const generateProcessAutomationSuggestions = async (query: string) => {\r\n  const prompt = `You are a process automation consultant AI. A user has described a process problem: \"${query}\".\r\n  Provide suggestions on how to automate this process using AI, robotics, NoCode/LowCode platforms, and/or programming.\r\n  Include:\r\n  1. Analysis of the current process\r\n  2. Suggested automation solutions (prioritized list)\r\n  3. Estimated implementation effort for each\r\n  4. Potential benefits\r\n  5. Hybrid solutions if appropriate\r\n\r\n  Be specific and actionable, suggesting tools like Zapier for NoCode, UiPath for RPA, or specific AI models.`;\r\n\r\n  return await queryOpenRouter(prompt);\r\n};\r\n"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,sBAAsB,QAAQ,GAAG,CAAC,mBAAmB;AAEpD,MAAM,kBAAkB,OAAO;IACpC,IAAI,CAAC,qBAAqB;QACxB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,WAAW,MAAM,MACrB,iDACA;QACE,QAAQ;QACR,SAAS;YACP,eAAe,CAAC,OAAO,EAAE,qBAAqB;YAC9C,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;YACnB,OAAO;YACP,UAAU;gBACR;oBACE,MAAM;oBACN,SAAS;gBACX;aACD;QACH;IACF;IAGF,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,SAAS,UAAU,EAAE;IACjE;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO;AACxC;AAEO,MAAM,gBAAgB,OAAO;IAClC,OAAO,MAAM,gBAAgB;AAC/B;AAEO,MAAM,uCAAuC,OAAO;IACzD,MAAM,SAAS,CAAC,qFAAqF,EAAE,MAAM;;;;;;;;;6GASF,CAAC;IAE5G,OAAO,MAAM,gBAAgB;AAC/B","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rybak/Desktop/Apps2/ProcessAutomationWithAI/src/lib/activityTracker.ts"],"sourcesContent":["import { db } from \"./firebase\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  query,\r\n  orderBy,\r\n  limit,\r\n  getDocs,\r\n  where,\r\n} from \"firebase/firestore\";\r\n\r\nexport interface UserActivity {\r\n  id?: string;\r\n  userId: string;\r\n  userEmail: string;\r\n  type:\r\n    | \"question_asked\"\r\n    | \"canvas_created\"\r\n    | \"canvas_saved\"\r\n    | \"case_study_viewed\"\r\n    | \"simulation_run\"\r\n    | \"login\";\r\n  title: string;\r\n  description: string;\r\n  timestamp: Date;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\nexport class ActivityTracker {\r\n  static async trackActivity(\r\n    activity: Omit<UserActivity, \"id\" | \"timestamp\">\r\n  ): Promise<void> {\r\n    try {\r\n      const activityWithTimestamp = {\r\n        ...activity,\r\n        timestamp: new Date(),\r\n      };\r\n\r\n      await addDoc(collection(db, \"user_activities\"), activityWithTimestamp);\r\n    } catch (error) {\r\n      console.error(\"Error tracking activity:\", error);\r\n      // Fallback to localStorage for guests or offline users\r\n      this.trackActivityLocal(activity);\r\n    }\r\n  }\r\n\r\n  static trackActivityLocal(\r\n    activity: Omit<UserActivity, \"id\" | \"timestamp\">\r\n  ): void {\r\n    try {\r\n      const activities = this.getLocalActivities();\r\n      const activityWithTimestamp = {\r\n        ...activity,\r\n        timestamp: new Date(),\r\n        id: Date.now().toString(),\r\n      };\r\n\r\n      activities.unshift(activityWithTimestamp);\r\n\r\n      // Keep only last 50 activities locally\r\n      if (activities.length > 50) {\r\n        activities.splice(50);\r\n      }\r\n\r\n      localStorage.setItem(\"local_activities\", JSON.stringify(activities));\r\n    } catch (error) {\r\n      console.error(\"Error tracking local activity:\", error);\r\n    }\r\n  }\r\n\r\n  static async getRecentActivities(\r\n    userId: string,\r\n    limitCount: number = 10\r\n  ): Promise<UserActivity[]> {\r\n    try {\r\n      const q = query(\r\n        collection(db, \"user_activities\"),\r\n        where(\"userId\", \"==\", userId),\r\n        orderBy(\"timestamp\", \"desc\"),\r\n        limit(limitCount)\r\n      );\r\n\r\n      const querySnapshot = await getDocs(q);\r\n      const activities: UserActivity[] = [];\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        activities.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n          timestamp: doc.data().timestamp.toDate(),\r\n        } as UserActivity);\r\n      });\r\n\r\n      return activities;\r\n    } catch (error) {\r\n      console.error(\"Error fetching activities:\", error);\r\n      // Fallback to local activities\r\n      return this.getLocalActivities().slice(0, limitCount);\r\n    }\r\n  }\r\n\r\n  static getLocalActivities(): UserActivity[] {\r\n    try {\r\n      const stored = localStorage.getItem(\"local_activities\");\r\n      if (!stored) return [];\r\n\r\n      const activities = JSON.parse(stored);\r\n      return activities.map((activity: any) => ({\r\n        ...activity,\r\n        timestamp: new Date(activity.timestamp),\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error reading local activities:\", error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  static async getActivityMetrics(userId: string): Promise<{\r\n    questionsAsked: number;\r\n    canvasesCreated: number;\r\n    simulationsRun: number;\r\n    caseStudiesViewed: number;\r\n    totalActivities: number;\r\n  }> {\r\n    try {\r\n      const activities = await this.getRecentActivities(userId, 100);\r\n\r\n      return {\r\n        questionsAsked: activities.filter((a) => a.type === \"question_asked\")\r\n          .length,\r\n        canvasesCreated: activities.filter((a) => a.type === \"canvas_created\")\r\n          .length,\r\n        simulationsRun: activities.filter((a) => a.type === \"simulation_run\")\r\n          .length,\r\n        caseStudiesViewed: activities.filter(\r\n          (a) => a.type === \"case_study_viewed\"\r\n        ).length,\r\n        totalActivities: activities.length,\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error fetching metrics:\", error);\r\n      return {\r\n        questionsAsked: 0,\r\n        canvasesCreated: 0,\r\n        simulationsRun: 0,\r\n        caseStudiesViewed: 0,\r\n        totalActivities: 0,\r\n      };\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;AA2BO,MAAM;IACX,aAAa,cACX,QAAgD,EACjC;QACf,IAAI;YACF,MAAM,wBAAwB;gBAC5B,GAAG,QAAQ;gBACX,WAAW,IAAI;YACjB;YAEA,MAAM,IAAA,2KAAM,EAAC,IAAA,+KAAU,EAAC,4HAAE,EAAE,oBAAoB;QAClD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,uDAAuD;YACvD,IAAI,CAAC,kBAAkB,CAAC;QAC1B;IACF;IAEA,OAAO,mBACL,QAAgD,EAC1C;QACN,IAAI;YACF,MAAM,aAAa,IAAI,CAAC,kBAAkB;YAC1C,MAAM,wBAAwB;gBAC5B,GAAG,QAAQ;gBACX,WAAW,IAAI;gBACf,IAAI,KAAK,GAAG,GAAG,QAAQ;YACzB;YAEA,WAAW,OAAO,CAAC;YAEnB,uCAAuC;YACvC,IAAI,WAAW,MAAM,GAAG,IAAI;gBAC1B,WAAW,MAAM,CAAC;YACpB;YAEA,aAAa,OAAO,CAAC,oBAAoB,KAAK,SAAS,CAAC;QAC1D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;QAClD;IACF;IAEA,aAAa,oBACX,MAAc,EACd,aAAqB,EAAE,EACE;QACzB,IAAI;YACF,MAAM,IAAI,IAAA,0KAAK,EACb,IAAA,+KAAU,EAAC,4HAAE,EAAE,oBACf,IAAA,0KAAK,EAAC,UAAU,MAAM,SACtB,IAAA,4KAAO,EAAC,aAAa,SACrB,IAAA,0KAAK,EAAC;YAGR,MAAM,gBAAgB,MAAM,IAAA,4KAAO,EAAC;YACpC,MAAM,aAA6B,EAAE;YAErC,cAAc,OAAO,CAAC,CAAC;gBACrB,WAAW,IAAI,CAAC;oBACd,IAAI,IAAI,EAAE;oBACV,GAAG,IAAI,IAAI,EAAE;oBACb,WAAW,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM;gBACxC;YACF;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,+BAA+B;YAC/B,OAAO,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,GAAG;QAC5C;IACF;IAEA,OAAO,qBAAqC;QAC1C,IAAI;YACF,MAAM,SAAS,aAAa,OAAO,CAAC;YACpC,IAAI,CAAC,QAAQ,OAAO,EAAE;YAEtB,MAAM,aAAa,KAAK,KAAK,CAAC;YAC9B,OAAO,WAAW,GAAG,CAAC,CAAC,WAAkB,CAAC;oBACxC,GAAG,QAAQ;oBACX,WAAW,IAAI,KAAK,SAAS,SAAS;gBACxC,CAAC;QACH,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mCAAmC;YACjD,OAAO,EAAE;QACX;IACF;IAEA,aAAa,mBAAmB,MAAc,EAM3C;QACD,IAAI;YACF,MAAM,aAAa,MAAM,IAAI,CAAC,mBAAmB,CAAC,QAAQ;YAE1D,OAAO;gBACL,gBAAgB,WAAW,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,kBACjD,MAAM;gBACT,iBAAiB,WAAW,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,kBAClD,MAAM;gBACT,gBAAgB,WAAW,MAAM,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,kBACjD,MAAM;gBACT,mBAAmB,WAAW,MAAM,CAClC,CAAC,IAAM,EAAE,IAAI,KAAK,qBAClB,MAAM;gBACR,iBAAiB,WAAW,MAAM;YACpC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;YACzC,OAAO;gBACL,gBAAgB;gBAChB,iBAAiB;gBACjB,gBAAgB;gBAChB,mBAAmB;gBACnB,iBAAiB;YACnB;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Rybak/Desktop/Apps2/ProcessAutomationWithAI/src/app/process-questions/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { auth } from \"@/lib/firebase\";\r\nimport { User, onAuthStateChanged } from \"firebase/auth\";\r\nimport { getAIResponse } from \"@/lib/openRouter\";\r\nimport { ActivityTracker } from \"@/lib/activityTracker\";\r\nimport Link from \"next/link\";\r\n\r\nexport default function ProcessQuestionsPage() {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [guestMode, setGuestMode] = useState(false);\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [response, setResponse] = useState(\"\");\r\n  const [conversationHistory, setConversationHistory] = useState<\r\n    Array<{ question: string; response: string }>\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setUser(user);\r\n      } else {\r\n        // Check if guest mode\r\n        const isGuest = localStorage.getItem(\"guestMode\") === \"true\";\r\n        if (isGuest) {\r\n          setGuestMode(true);\r\n          setUser({ email: \"guest@example.com\" } as User);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const handleGuestLogin = () => {\r\n    localStorage.setItem(\"guestMode\", \"true\");\r\n    setGuestMode(true);\r\n    setUser({ email: \"guest@example.com\" } as User);\r\n    setLoading(false);\r\n  };\r\n\r\n  const generatePrompt = (userQuestion: string) => {\r\n    return `You are an AI consultant specializing in process automation. A consultant has asked: \"${userQuestion}\"\r\n\r\nPlease analyze this query and provide recommendations for automating this process. Consider using a combination of:\r\n- AI (artificial intelligence, machine learning)\r\n- Robotics (RPA - Robotic Process Automation)\r\n- NoCode/LowCode platforms (Zapier, Make, Airtable, Bubble, etc.)\r\n- Custom programming solutions\r\n\r\nFor each recommendation, include:\r\n1. The specific automation approach\r\n2. Estimated implementation effort (Low/Medium/High)\r\n3. Potential benefits (time savings, cost reduction, error reduction)\r\n4. Any special considerations\r\n\r\nAfter recommendations, suggest how this could create a flow that transfers to an interactive canvas for visualization.\r\n\r\nStructure your response professionally and provide actionable insights.`;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!question.trim()) return;\r\n\r\n    setIsGenerating(true);\r\n    try {\r\n      const prompt = generatePrompt(question);\r\n      const aiResponse = await getAIResponse(prompt);\r\n\r\n      setResponse(aiResponse);\r\n      setConversationHistory((prev) => [\r\n        ...prev,\r\n        { question, response: aiResponse },\r\n      ]);\r\n\r\n      // Track activity if user is logged in\r\n      if (user && !guestMode) {\r\n        await ActivityTracker.trackActivity({\r\n          userId: user.uid,\r\n          userEmail: user.email!,\r\n          type: \"question_asked\",\r\n          title: `Asked: ${question.substring(0, 50)}${\r\n            question.length > 50 ? \"...\" : \"\"\r\n          }`,\r\n          description:\r\n            \"User asked a process automation question and received AI recommendations\",\r\n          metadata: { questionLength: question.length },\r\n        });\r\n      }\r\n\r\n      // Clear question input only if not in conversation mode\r\n      setQuestion(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error generating response:\", error);\r\n      setResponse(\r\n        \"Sorry, there was an error generating the response. Please try again.\"\r\n      );\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  const createCanvasFromResponse = () => {\r\n    if (!response) return;\r\n\r\n    // Generate a simple canvas JSON structure from the response\r\n    const canvasData = {\r\n      nodes: [\r\n        {\r\n          id: \"start\",\r\n          type: \"start\",\r\n          label: \"Start Process\",\r\n          position: { x: 100, y: 100 },\r\n        },\r\n        {\r\n          id: \"automation\",\r\n          type: \"process\",\r\n          label: \"Automation Step\",\r\n          position: { x: 300, y: 100 },\r\n          description: response.substring(0, 100) + \"...\",\r\n        },\r\n        {\r\n          id: \"end\",\r\n          type: \"end\",\r\n          label: \"End Process\",\r\n          position: { x: 500, y: 100 },\r\n        },\r\n      ],\r\n      edges: [\r\n        { id: \"e1-2\", source: \"start\", target: \"automation\" },\r\n        { id: \"e2-3\", source: \"automation\", target: \"end\" },\r\n      ],\r\n    };\r\n\r\n    // Store canvas data and navigate\r\n    localStorage.setItem(\"canvasData\", JSON.stringify(canvasData));\r\n    window.location.href = \"/canvas\";\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n        <div className=\"text-center\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Access Required\r\n          </h2>\r\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n            Please log in to access this feature\r\n          </p>\r\n          <div className=\"mt-6 space-y-4\">\r\n            <Link\r\n              href=\"/auth\"\r\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n            >\r\n              Log In\r\n            </Link>\r\n            <button\r\n              onClick={handleGuestLogin}\r\n              className=\"w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n            >\r\n              Continue as Guest\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-6\">\r\n            <div className=\"flex items-center\">\r\n              <Link\r\n                href=\"/dashboard\"\r\n                className=\"text-indigo-600 hover:text-indigo-500\"\r\n              >\r\n                ← Back to Dashboard\r\n              </Link>\r\n              <h2 className=\"ml-4 text-2xl font-bold text-gray-900\">\r\n                Process Questions\r\n              </h2>\r\n            </div>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <span className=\"text-sm text-gray-700\">\r\n                {guestMode ? \"Guest Mode\" : `Welcome, ${user.email}`}\r\n              </span>\r\n              {!guestMode && (\r\n                <Link\r\n                  href=\"/auth\"\r\n                  className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n                >\r\n                  Sign out\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"max-w-4xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n        <div className=\"px-4 py-6 sm:px-0\">\r\n          <div className=\"bg-white shadow rounded-lg p-6\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n              Ask About Process Automation\r\n            </h3>\r\n            <p className=\"text-gray-600 mb-6\">\r\n              Describe a business process you'd like to automate, and our AI\r\n              will provide tailored recommendations using AI, RPA,\r\n              NoCode/LowCode platforms, or custom programming solutions.\r\n            </p>\r\n\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n              <div>\r\n                <label\r\n                  htmlFor=\"question\"\r\n                  className=\"block text-sm font-medium text-gray-700\"\r\n                >\r\n                  Process Question\r\n                </label>\r\n                <textarea\r\n                  id=\"question\"\r\n                  rows={4}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                  placeholder=\"E.g., How can I automate our repetitive data entry process?\"\r\n                  value={question}\r\n                  onChange={(e) => setQuestion(e.target.value)}\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isGenerating || !question.trim()}\r\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {isGenerating ? \"Generating...\" : \"Get Recommendations\"}\r\n              </button>\r\n            </form>\r\n\r\n            {response && (\r\n              <div className=\"mt-6\">\r\n                <h4 className=\"text-md font-medium text-gray-900 mb-2\">\r\n                  AI Recommendations\r\n                </h4>\r\n                <div className=\"bg-gray-50 rounded-md p-4 whitespace-pre-wrap text-sm text-gray-700\">\r\n                  {response}\r\n                </div>\r\n                <div className=\"mt-4 flex space-x-2\">\r\n                  <button\r\n                    onClick={createCanvasFromResponse}\r\n                    className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                  >\r\n                    Create Canvas\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setResponse(\"\")}\r\n                    className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                  >\r\n                    Clear\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {conversationHistory.length > 0 && (\r\n              <div className=\"mt-8\">\r\n                <h4 className=\"text-md font-medium text-gray-900 mb-4\">\r\n                  Previous Questions\r\n                </h4>\r\n                <div className=\"space-y-4\">\r\n                  {conversationHistory.map((item, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"border border-gray-200 rounded-md p-4\"\r\n                    >\r\n                      <p className=\"font-medium text-gray-900 mb-2\">\r\n                        Q: {item.question}\r\n                      </p>\r\n                      <div className=\"text-sm text-gray-700 whitespace-pre-wrap\">\r\n                        A: {item.response.substring(0, 200)}...\r\n                      </div>\r\n                      <button\r\n                        onClick={() => setResponse(item.response)}\r\n                        className=\"mt-2 text-indigo-600 hover:text-indigo-500 text-sm\"\r\n                      >\r\n                        View Full Response\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}